

- name: Install required system packages (Debian-based)
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: latest
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install required system packages (Red Hat-based)
  ansible.builtin.yum:
    name:
      - yum-utils
      #- device-mapper-persistent-data
      #- lvm2
    state: latest
    update_cache: yes
  when: ansible_os_family == "RedHat"

- name: Add Docker GPG key (Debian-based)
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker repository (Debian-based)
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  when: ansible_os_family == "Debian"

- name: Add Docker repository (Red Hat-based)
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
  when: ansible_os_family == "RedHat"

- name: Install Docker (Debian-based)
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: latest
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install Docker (Red Hat-based)
  ansible.builtin.yum:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: latest
    update_cache: yes
  when: ansible_os_family == "RedHat"

- name: Start and enable Docker service
  ansible.builtin.service:
    name: docker
    enabled: yes
    state: started

- name: Create docker group
  ansible.builtin.group:
    name: "{{ docker_group }}"
    state: present

- name: Add user to docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: "{{ docker_group }}"
    append: yes